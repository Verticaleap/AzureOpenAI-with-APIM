<?xml version="1.0" encoding="utf-8"?>
<application xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd" xmlns="http://wadl.dev.java.net/2009/02">
  <doc title="Content Safety Service">Azure AI Content Safety detects harmful user-generated and AI-generated content in applications and services. Azure AI Content Safety includes text, image, and multimodal APIs which allows you to detect material that is potentially offensive, risky, or otherwise undesirable. We also have an Interactive Studio that allows you to view, explore and try out for detecting harmful content across different modalities.

For more detailed information, please refer to this product document (&lt;a href="https://review.learn.microsoft.com/en-us/azure/cognitive-services/content-safety/concepts/harm-categories?branch=release-build-content-safety"&gt;link&lt;/a&gt;).</doc>
  <resources base="https://cognitive-wu.cognitiveservices.azure.com/contentsafety">
    <resource path="/text:analyze">
      <doc title="Analyze Text">A synchronous API for the analysis of potentially harmful text content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.</doc>
      <method name="POST">
        <request>
          <doc>The text analysis request.</doc>
          <representation mediaType="application/json">
            <doc>{
  "text": "string",
  "categories": [
    "Hate"
  ],
  "blocklistNames": [
    "string"
  ],
  "haltOnBlocklistHit": true,
  "outputType": "FourSeverityLevels"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistsMatch": [
    {
      "blocklistName": "string",
      "blocklistItemId": "string",
      "blocklistItemText": "string"
    }
  ],
  "categoriesAnalysis": [
    {
      "category": "Hate",
      "severity": 0
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/image:analyze">
      <doc title="Analyze Image">A synchronous API for the analysis of potentially harmful image content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.</doc>
      <method name="POST">
        <request>
          <doc>The image analysis request.</doc>
          <representation mediaType="application/json">
            <doc>{
  "image": {
    "content": "string",
    "blobUrl": "string"
  },
  "categories": [
    "Hate"
  ],
  "outputType": "FourSeverityLevels"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "categoriesAnalysis": [
    {
      "category": "Hate",
      "severity": 0
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Create Or Update Text Blocklist">Updates a text blocklist. If the blocklistName does not exist, a new blocklist will be created.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="PATCH">
        <request>
          <doc>The resource instance.</doc>
          <representation mediaType="application/merge-patch+json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="201">
          <doc>The request has succeeded and a new resource has been created as a result.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}/blocklistItems">
      <doc title="Get All BlocklistItems By blocklistName">Get all blocklistItems in a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="GET">
        <request>
          <param name="top" style="query" type="xs:integer">
            <doc>Format - int32. The number of result items to return.</doc>
          </param>
          <param name="skip" style="query" type="xs:integer" default="0">
            <doc>Format - int32. The number of result items to skip.</doc>
          </param>
          <param name="maxpagesize" style="query" type="xs:integer">
            <doc>Format - int32. The maximum number of result items per page.</doc>
          </param>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "value": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ],
  "nextLink": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists">
      <doc title="Get All Text Blocklists">Get all text blocklists details.</doc>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "value": [
    {
      "blocklistName": "string",
      "description": "string"
    }
  ],
  "nextLink": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Get Text Blocklist By blocklistName">Returns text blocklist details.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}/blocklistItems/{blocklistItemId}">
      <doc title="Get BlocklistItem By blocklistName And blocklistItemId">Get blocklistItem by blocklistName and blocklistItemId from a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <param name="blocklistItemId" style="template" type="xs:string" required="true">
        <doc>The service will generate a BlocklistItemId, which will be a UUID.</doc>
      </param>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItemId": "string",
  "description": "string",
  "text": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Delete Text Blocklist By blocklistName">Deletes a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="DELETE">
        <request />
        <response status="204">
          <doc>There is no content to send for this request, but the headers may be useful. </doc>
          <representation mediaType="application/json" />
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}:addOrUpdateBlocklistItems">
      <doc title="Add or update BlocklistItems To Text Blocklist">Add or update blocklistItems to a text blocklist. You can add or update at most 100 blocklistItems in one request.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="POST">
        <request>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItems": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ]
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItems": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}:removeBlocklistItems">
      <doc title="Remove BlocklistItems From Text Blocklist">Remove blocklistItems from a text blocklist. You can remove at most 100 BlocklistItems in one request.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="POST">
        <request>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItemIds": [
    "string"
  ]
}</doc>
          </representation>
        </request>
        <response status="204">
          <doc>There is no content to send for this request, but the headers may be useful. </doc>
          <representation mediaType="application/json" />
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
  </resources>
  <resources base="https://westus.api.cognitive.microsoft.com/contentsafety">
    <resource path="/text:analyze">
      <doc title="Analyze Text">A synchronous API for the analysis of potentially harmful text content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.</doc>
      <method name="POST">
        <request>
          <doc>The text analysis request.</doc>
          <representation mediaType="application/json">
            <doc>{
  "text": "string",
  "categories": [
    "Hate"
  ],
  "blocklistNames": [
    "string"
  ],
  "haltOnBlocklistHit": true,
  "outputType": "FourSeverityLevels"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistsMatch": [
    {
      "blocklistName": "string",
      "blocklistItemId": "string",
      "blocklistItemText": "string"
    }
  ],
  "categoriesAnalysis": [
    {
      "category": "Hate",
      "severity": 0
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/image:analyze">
      <doc title="Analyze Image">A synchronous API for the analysis of potentially harmful image content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.</doc>
      <method name="POST">
        <request>
          <doc>The image analysis request.</doc>
          <representation mediaType="application/json">
            <doc>{
  "image": {
    "content": "string",
    "blobUrl": "string"
  },
  "categories": [
    "Hate"
  ],
  "outputType": "FourSeverityLevels"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "categoriesAnalysis": [
    {
      "category": "Hate",
      "severity": 0
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Create Or Update Text Blocklist">Updates a text blocklist. If the blocklistName does not exist, a new blocklist will be created.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="PATCH">
        <request>
          <doc>The resource instance.</doc>
          <representation mediaType="application/merge-patch+json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="201">
          <doc>The request has succeeded and a new resource has been created as a result.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}/blocklistItems">
      <doc title="Get All BlocklistItems By blocklistName">Get all blocklistItems in a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="GET">
        <request>
          <param name="top" style="query" type="xs:integer">
            <doc>Format - int32. The number of result items to return.</doc>
          </param>
          <param name="skip" style="query" type="xs:integer" default="0">
            <doc>Format - int32. The number of result items to skip.</doc>
          </param>
          <param name="maxpagesize" style="query" type="xs:integer">
            <doc>Format - int32. The maximum number of result items per page.</doc>
          </param>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "value": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ],
  "nextLink": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists">
      <doc title="Get All Text Blocklists">Get all text blocklists details.</doc>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "value": [
    {
      "blocklistName": "string",
      "description": "string"
    }
  ],
  "nextLink": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Get Text Blocklist By blocklistName">Returns text blocklist details.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}/blocklistItems/{blocklistItemId}">
      <doc title="Get BlocklistItem By blocklistName And blocklistItemId">Get blocklistItem by blocklistName and blocklistItemId from a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <param name="blocklistItemId" style="template" type="xs:string" required="true">
        <doc>The service will generate a BlocklistItemId, which will be a UUID.</doc>
      </param>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItemId": "string",
  "description": "string",
  "text": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Delete Text Blocklist By blocklistName">Deletes a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="DELETE">
        <request />
        <response status="204">
          <doc>There is no content to send for this request, but the headers may be useful. </doc>
          <representation mediaType="application/json" />
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}:addOrUpdateBlocklistItems">
      <doc title="Add or update BlocklistItems To Text Blocklist">Add or update blocklistItems to a text blocklist. You can add or update at most 100 blocklistItems in one request.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="POST">
        <request>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItems": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ]
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItems": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}:removeBlocklistItems">
      <doc title="Remove BlocklistItems From Text Blocklist">Remove blocklistItems from a text blocklist. You can remove at most 100 BlocklistItems in one request.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="POST">
        <request>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItemIds": [
    "string"
  ]
}</doc>
          </representation>
        </request>
        <response status="204">
          <doc>There is no content to send for this request, but the headers may be useful. </doc>
          <representation mediaType="application/json" />
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
  </resources>
  <resources base="https://cognitive-wu.openai.azure.com/contentsafety">
    <resource path="/text:analyze">
      <doc title="Analyze Text">A synchronous API for the analysis of potentially harmful text content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.</doc>
      <method name="POST">
        <request>
          <doc>The text analysis request.</doc>
          <representation mediaType="application/json">
            <doc>{
  "text": "string",
  "categories": [
    "Hate"
  ],
  "blocklistNames": [
    "string"
  ],
  "haltOnBlocklistHit": true,
  "outputType": "FourSeverityLevels"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistsMatch": [
    {
      "blocklistName": "string",
      "blocklistItemId": "string",
      "blocklistItemText": "string"
    }
  ],
  "categoriesAnalysis": [
    {
      "category": "Hate",
      "severity": 0
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/image:analyze">
      <doc title="Analyze Image">A synchronous API for the analysis of potentially harmful image content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.</doc>
      <method name="POST">
        <request>
          <doc>The image analysis request.</doc>
          <representation mediaType="application/json">
            <doc>{
  "image": {
    "content": "string",
    "blobUrl": "string"
  },
  "categories": [
    "Hate"
  ],
  "outputType": "FourSeverityLevels"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "categoriesAnalysis": [
    {
      "category": "Hate",
      "severity": 0
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Create Or Update Text Blocklist">Updates a text blocklist. If the blocklistName does not exist, a new blocklist will be created.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="PATCH">
        <request>
          <doc>The resource instance.</doc>
          <representation mediaType="application/merge-patch+json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="201">
          <doc>The request has succeeded and a new resource has been created as a result.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}/blocklistItems">
      <doc title="Get All BlocklistItems By blocklistName">Get all blocklistItems in a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="GET">
        <request>
          <param name="top" style="query" type="xs:integer">
            <doc>Format - int32. The number of result items to return.</doc>
          </param>
          <param name="skip" style="query" type="xs:integer" default="0">
            <doc>Format - int32. The number of result items to skip.</doc>
          </param>
          <param name="maxpagesize" style="query" type="xs:integer">
            <doc>Format - int32. The maximum number of result items per page.</doc>
          </param>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "value": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ],
  "nextLink": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists">
      <doc title="Get All Text Blocklists">Get all text blocklists details.</doc>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "value": [
    {
      "blocklistName": "string",
      "description": "string"
    }
  ],
  "nextLink": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Get Text Blocklist By blocklistName">Returns text blocklist details.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}/blocklistItems/{blocklistItemId}">
      <doc title="Get BlocklistItem By blocklistName And blocklistItemId">Get blocklistItem by blocklistName and blocklistItemId from a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <param name="blocklistItemId" style="template" type="xs:string" required="true">
        <doc>The service will generate a BlocklistItemId, which will be a UUID.</doc>
      </param>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItemId": "string",
  "description": "string",
  "text": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Delete Text Blocklist By blocklistName">Deletes a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="DELETE">
        <request />
        <response status="204">
          <doc>There is no content to send for this request, but the headers may be useful. </doc>
          <representation mediaType="application/json" />
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}:addOrUpdateBlocklistItems">
      <doc title="Add or update BlocklistItems To Text Blocklist">Add or update blocklistItems to a text blocklist. You can add or update at most 100 blocklistItems in one request.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="POST">
        <request>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItems": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ]
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItems": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}:removeBlocklistItems">
      <doc title="Remove BlocklistItems From Text Blocklist">Remove blocklistItems from a text blocklist. You can remove at most 100 BlocklistItems in one request.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="POST">
        <request>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItemIds": [
    "string"
  ]
}</doc>
          </representation>
        </request>
        <response status="204">
          <doc>There is no content to send for this request, but the headers may be useful. </doc>
          <representation mediaType="application/json" />
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
  </resources>
  <resources base="https://api.projectoxford.ai/contentsafety">
    <resource path="/text:analyze">
      <doc title="Analyze Text">A synchronous API for the analysis of potentially harmful text content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.</doc>
      <method name="POST">
        <request>
          <doc>The text analysis request.</doc>
          <representation mediaType="application/json">
            <doc>{
  "text": "string",
  "categories": [
    "Hate"
  ],
  "blocklistNames": [
    "string"
  ],
  "haltOnBlocklistHit": true,
  "outputType": "FourSeverityLevels"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistsMatch": [
    {
      "blocklistName": "string",
      "blocklistItemId": "string",
      "blocklistItemText": "string"
    }
  ],
  "categoriesAnalysis": [
    {
      "category": "Hate",
      "severity": 0
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/image:analyze">
      <doc title="Analyze Image">A synchronous API for the analysis of potentially harmful image content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.</doc>
      <method name="POST">
        <request>
          <doc>The image analysis request.</doc>
          <representation mediaType="application/json">
            <doc>{
  "image": {
    "content": "string",
    "blobUrl": "string"
  },
  "categories": [
    "Hate"
  ],
  "outputType": "FourSeverityLevels"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "categoriesAnalysis": [
    {
      "category": "Hate",
      "severity": 0
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Create Or Update Text Blocklist">Updates a text blocklist. If the blocklistName does not exist, a new blocklist will be created.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="PATCH">
        <request>
          <doc>The resource instance.</doc>
          <representation mediaType="application/merge-patch+json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="201">
          <doc>The request has succeeded and a new resource has been created as a result.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}/blocklistItems">
      <doc title="Get All BlocklistItems By blocklistName">Get all blocklistItems in a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="GET">
        <request>
          <param name="top" style="query" type="xs:integer">
            <doc>Format - int32. The number of result items to return.</doc>
          </param>
          <param name="skip" style="query" type="xs:integer" default="0">
            <doc>Format - int32. The number of result items to skip.</doc>
          </param>
          <param name="maxpagesize" style="query" type="xs:integer">
            <doc>Format - int32. The maximum number of result items per page.</doc>
          </param>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "value": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ],
  "nextLink": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists">
      <doc title="Get All Text Blocklists">Get all text blocklists details.</doc>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "value": [
    {
      "blocklistName": "string",
      "description": "string"
    }
  ],
  "nextLink": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Get Text Blocklist By blocklistName">Returns text blocklist details.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistName": "string",
  "description": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}/blocklistItems/{blocklistItemId}">
      <doc title="Get BlocklistItem By blocklistName And blocklistItemId">Get blocklistItem by blocklistName and blocklistItemId from a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <param name="blocklistItemId" style="template" type="xs:string" required="true">
        <doc>The service will generate a BlocklistItemId, which will be a UUID.</doc>
      </param>
      <method name="GET">
        <request />
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItemId": "string",
  "description": "string",
  "text": "string"
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}">
      <doc title="Delete Text Blocklist By blocklistName">Deletes a text blocklist.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="DELETE">
        <request />
        <response status="204">
          <doc>There is no content to send for this request, but the headers may be useful. </doc>
          <representation mediaType="application/json" />
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}:addOrUpdateBlocklistItems">
      <doc title="Add or update BlocklistItems To Text Blocklist">Add or update blocklistItems to a text blocklist. You can add or update at most 100 blocklistItems in one request.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="POST">
        <request>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItems": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ]
}</doc>
          </representation>
        </request>
        <response status="200">
          <doc>The request has succeeded.</doc>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItems": [
    {
      "blocklistItemId": "string",
      "description": "string",
      "text": "string"
    }
  ]
}</doc>
          </representation>
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource path="/text/blocklists/{blocklistName}:removeBlocklistItems">
      <doc title="Remove BlocklistItems From Text Blocklist">Remove blocklistItems from a text blocklist. You can remove at most 100 BlocklistItems in one request.</doc>
      <param name="blocklistName" style="template" type="xs:string" required="true">
        <doc>Text blocklist name.</doc>
      </param>
      <method name="POST">
        <request>
          <representation mediaType="application/json">
            <doc>{
  "blocklistItemIds": [
    "string"
  ]
}</doc>
          </representation>
        </request>
        <response status="204">
          <doc>There is no content to send for this request, but the headers may be useful. </doc>
          <representation mediaType="application/json" />
        </response>
        <response status="500">
          <doc>An unexpected error response.</doc>
          <representation mediaType="application/json" />
        </response>
      </method>
    </resource>
  </resources>
</application>